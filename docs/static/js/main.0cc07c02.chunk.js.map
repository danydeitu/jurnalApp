{"version":3,"sources":["hooks/useForm.js","firebase/config.js","types/index.js","actions/ui.js","errors/index.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/index.js","reducers/authReducer.js","App.js","index.js"],"names":["useState","require","useForm","initialState","state","setState","reset","newState","handleInputChange","target","name","value","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","types","setError","error","type","payload","finishLoading","errors","code","msg","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","getAuth","then","user","login","uid","displayName","catch","console","message","prop","logout","LoginScreen","useDispatch","useSelector","ui","loading","msgError","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","log","startRegisterWithEmailPasswordName","AuthRouter","path","element","activeNote","id","note","setNotes","notes","saveNote","getState","auth","noteToFirestore","updateDoc","doc","updateNotes","deleteNote","JournalEntry","title","body","date","url","noteDate","moment","style","backgroundSize","backgroundImage","format","charAt","toUpperCase","slice","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","addDoc","collection","NotesAppBar","active","hidden","file","files","formData","FormData","append","Swal","fire","text","allowOutsideClick","didOpen","showLoading","fetch","method","response","json","result","secure_url","close","uploadFile","htmlFor","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","getDocs","forEach","push","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cc07c02.chunk.js","sourcesContent":["const { useState } = require(\"react\");\n\n\nexport const useForm = (initialState = {}) => {\n  \n    const [state, setState] = useState(initialState);\n  \n    const reset = (newState = initialState) => {\n        setState(newState)\n    }\n\n    const handleInputChange = ({target}) => {\n\n        setState({\n            ...state,\n            [target.name] : target.value,\n        })\n    }\n\n    return [state, handleInputChange, reset]\n}\n","import { initializeApp } from \"firebase/app\";\nimport {getFirestore} from 'firebase/firestore';\nimport {GoogleAuthProvider} from 'firebase/auth'\n\n\n// configuración de Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCDgO8HYKhCyq3cq0w2VtrqcAHoGOj5rjU\",\n  authDomain: \"intensivo-react-2022.firebaseapp.com\",\n  projectId: \"intensivo-react-2022\",\n  storageBucket: \"intensivo-react-2022.appspot.com\",\n  messagingSenderId: \"422030560831\",\n  appId: \"1:422030560831:web:45e65621af6306dc53b28a\"\n};\n\n// inicialización de Firebase\nconst app = initializeApp(firebaseConfig);\n\n//configuración de Firestore\nconst db = getFirestore(app);\n\n//configuración de la autenticación de Google\nconst googleAuthProvider = new GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider\n}","export const types = {\n    login : '[Auth] Login',\n    logout : '[Auth] Logout',\n\n    uiSetError : '[UI] Set Error',\n    uiRemoveError : '[UI] Remove Error',\n    uiStartLoading : '[UI] Start Loading',\n    uiFinishLoading : '[UI] Finish Loading',\n\n    noteAddNew : '[Notes] New note',\n    noteActive : '[Notes] Set active note',\n    notesLoad : '[Notes] Load notes',\n    noteUpdate : '[Notes] Update note',\n    noteFileUrl : '[Notes] Update image url',\n    noteDelete : '[Notes] Delete note',\n    notesLogoutCleaning : '[Notes] Logout cleaning'\n}","import { types } from \"../types\";\n\nexport const setError = (error) => ({\n    type : types.uiSetError,\n    payload : error\n});\n\nexport const removeError = () => ({\n    type : types.uiRemoveError\n});\n\nexport const startLoading = () =>({\n    type : types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type : types.uiFinishLoading\n})","export const errors = [\n    {\n        code : 'auth/email-already-exists',\n        msg : \"El email ya se encuentra registrado.\"\n    },\n    {\n        code : 'auth/invalid-email',\n        msg : \"El email no es válido.\"\n    },\n    {\n        code : 'Firebase: Error (auth/wrong-password).',\n        msg : \"La contraseña es incorrecta.\"\n    },\n    {\n        code : 'Firebase: Error (auth/user-not-found).',\n        msg : \"Credenciales inválidas\"\n    },\n    {\n        code : 'Firebase: Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later. (auth/too-many-requests).',\n        msg : \"Debido a reiterados intentos fallidos, su cuenta fue inhabilitada temporalmente. Intente más tarde\"\n    }\n]","import { signInWithPopup, getAuth, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\n\nimport { googleAuthProvider } from '../firebase/config';\nimport { types } from \"../types\";\nimport { finishLoading, setError, startLoading } from './ui';\nimport { errors } from '../errors';\n\n\n\nexport const startLoginEmailPassword = (email, password) => {\n\n    return (dispatch) => {\n\n        dispatch(startLoading())\n\n        signInWithEmailAndPassword(getAuth(), email, password)\n            .then(({ user }) => {\n\n                dispatch(login(user.uid, user.displayName))\n                dispatch(finishLoading())\n\n            })\n            .catch(error => {\n                console.error(error.message);\n                dispatch(finishLoading());\n\n                for (const prop of errors) {\n                    prop.code === error.message && dispatch(setError(prop.msg))\n                }\n\n            })\n\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n\n    return (dispatch) => {\n\n        createUserWithEmailAndPassword(getAuth(), email, password)\n            .then(async ({ user }) => {\n\n                await updateProfile(user, {\n                    displayName: name\n                })\n\n                //console.log(user);\n                dispatch(login(user.uid, user.displayName))\n            })\n            .catch(error => console.log(error))\n    }\n}\n\nexport const startGoogleLogin = () => {\n\n    return (dispatch) => {\n        signInWithPopup(getAuth(), googleAuthProvider)\n            .then(({ user }) => {\n                dispatch(login(user.uid, user.displayName))\n            })\n    }\n}\n\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n})\n\nexport const startLogout = () => {\n\n    return (dispatch) => {\n\n        signOut(getAuth())\n            .then(() => {\n                dispatch(logout())\n            })\n            .catch(error => console.log(error))\n    }\n}\n\nexport const logout = () => ({ type: types.logout })","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'; \n\nexport const LoginScreen = () => {\n\nconst dispatch = useDispatch();\n\nconst {loading, msgError} = useSelector(state => state.ui)\n\nconst [formValues, handleInputChange] = useForm({\n    email : 'menaericdaniel@gmail.com',\n    password : '123123'\n})\n\nconst {email,password} = formValues;\n\nconst handleLogin = (e) => {\n    e.preventDefault();\n\n    //dispatch(login(123123,'Patito'))\n    dispatch(startLoginEmailPassword(email,password))\n\n}\n\nconst handleGoogleLogin = () => {\n    dispatch(startGoogleLogin())\n}\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Iniciar sesión</h3>\n\n            <form onSubmit={handleLogin}>\n\n            {\n                msgError && \n                <div className='auth__alert-error'>\n                    {msgError}\n                </div>\n            }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Ingresar\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Ingresá con tu red social</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Iniciá sesión con Google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/jounalApp/auth/register\"\n                    className=\"link\"\n                >\n                    Creá tu cuenta    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const {msgError} = useSelector(state => state.ui);\n    //console.log(msgError);\n\n    const [formValues, handleInputChange] = useForm({\n        name : 'Eric',\n        email : 'menaericdaniel@gmail.com',\n        password : '123123',\n        password2 : '123123'\n    })\n\n    const {name, email, password, password2} = formValues;\n\n\n    const handleRegister = (e) => {\n        \n        e.preventDefault();\n\n        if(isFormValid()){\n            //console.log('formulario correcto');\n            dispatch(startRegisterWithEmailPasswordName(email,password, name))\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        switch (true) {\n            case name.trim().length === 0:\n                dispatch(setError('El nombre es requerido'))\n                return false;\n            case !validator.isEmail(email):\n                dispatch(setError('El email es inválido'))\n                return false;\n            case password.length < 6:\n                dispatch(setError('La contraseña debe tener 6 caracteres'))\n                return false;\n            case password !== password2:\n                dispatch(setError('Revise la verificación de la contraseña'))\n                return false;\n            default:\n                dispatch(removeError())\n                return true;\n        }\n\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Registro</h3>\n\n            <form onSubmit={handleRegister}>\n\n            {\n                msgError && \n                <div className='auth__alert-error'>\n                    {msgError}\n                </div>\n            }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Registrar\n                </button>\n\n               \n\n                <Link \n                    to=\"/jounalApp/auth/login\"\n                    className=\"link\"\n                >\n                    ¿Estás registrado/a?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Routes>\n                    <Route \n                        path=\"/login\"\n                        element={ <LoginScreen/> }\n                    />\n\n                    <Route \n                        path=\"/register\"\n                        element={ <RegisterScreen/> }\n                    />\n\n               </Routes>\n            </div>\n\n        </div>\n    )\n}\n","import { addDoc, collection, deleteDoc, doc, getDocs, updateDoc } from 'firebase/firestore';\nimport Swal from 'sweetalert2';\nimport { db } from '../firebase/config';\nimport { types } from '../types';\n\n\nexport const activeNote = (id, note) => ({\n    \n    type: types.noteActive,\n    payload : {\n        id,\n        ...note\n    }\n})\n\n\nexport const startNewNotes = () => {\n\n    return async (dispatch, getState) => {\n        try {\n        const { uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n      \n            const doc = await addDoc(collection(db, `${uid}/journal/notes`), newNote)\n            //console.log(doc.id);\n            dispatch(activeNote(doc.id,newNote))\n        } catch (error) {\n            console.error(error)\n        }\n      \n    }\n}\n\nexport const addNewNote = (note) => ({\n    type :  types.noteAddNew,\n    payload : note\n\n})\n\nexport const loadNotes = () => {\n\n    return async (dispatch,getState) => {\n\n        try {\n            const {uid} = getState().auth;\n            const notes = [];\n\n            let query = await getDocs(collection(db,`${uid}/journal/notes`))\n            \n            query.forEach(doc => {\n                //console.log(doc.data());\n                notes.push({\n                    id : doc.id,\n                    ...doc.data()\n                })\n            })\n\n            dispatch(setNotes(notes))\n\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nexport const setNotes = (notes) => ({\n    type : types.notesLoad,\n    payload : notes\n})\n\nexport const saveNote = (note) => {\n\n    return async (dispatch, getState) => {\n\n        const {uid} = getState().auth;\n        \n        const noteToFirestore = {...note};\n        delete noteToFirestore.id;\n        //console.log(noteToFirestore);\n\n        try {\n\n            await updateDoc(doc(db, `${uid}/journal/notes`,note.id ),noteToFirestore)\n            //console.log('nota actualizada??')\n\n            dispatch(updateNotes(note.id, note));\n\n        } catch (error) {\n            console.error(error);\n        }\n\n    }\n}\n\nexport const updateNotes = (id, note) => ({\n    type: types.noteUpdate,\n    payload : {\n        id,\n        note\n    }\n})\n\nexport const startDeleteNote = (id) => {\n\n    return async (dispatch, getState) => {\n\n        const {uid} = getState().auth;\n\n        try {\n\n            await deleteDoc(doc(db, `${uid}/journal/notes`,id))\n           //console.log('nota eliminada??')\n           dispatch(deleteNote(id))\n            \n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type :  types.noteDelete,\n    payload : id\n})\n\nexport const uploadFile = (file) => {\n\n    return async (dispatch, getState) => {\n\n        const {active} = getState().notes;\n        const cloudURL = 'https://api.cloudinary.com/v1_1/ericm76/upload';\n\n        const formData = new FormData();\n\n        formData.append('upload_preset','react-journal');\n        formData.append('file',file);\n\n        Swal.fire({\n            title : 'Subiendo imagen...',\n            text : 'Por favor espere',\n            allowOutsideClick : false,\n            didOpen : () => {\n                Swal.showLoading()\n            }\n        })\n\n        try {\n            \n            const response = await fetch(cloudURL,{\n                method : 'POST',\n                body : formData\n            });\n\n            const result = await response.json();\n\n            active.url = result.secure_url;\n\n            dispatch(saveNote(active));\n\n            Swal.close();\n\n        } catch (error) {\n            console.error(error);\n        }\n\n    }\n\n}","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({id,title,body,date,url}) => {\n\n    const dispatch = useDispatch()\n\n    const noteDate = moment(date);\n    //console.log(noteDate)\n\n\n    const handleNoteActive = () => {\n\n        dispatch(activeNote(id,{\n            title,\n            body,\n            date,\n            url\n        }))\n    }\n\n    return (\n        <div \n            className=\"journal__entry pointer\"\n            onClick={handleNoteActive}\n        >\n            \n            <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: `url(${url})`\n                }}\n            ></div>\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd').charAt(0).toUpperCase() + noteDate.format('dddd').slice(1)}</span>\n                <h4>{noteDate.format('D')}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    //const entries = [1,2,3,4,5 ];\n\n    const {notes} = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id } \n                        {...note}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { startNewNotes } from '../../actions/notes'\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n\n    const dispatch = useDispatch();\n\n    const {name} = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        \n        dispatch(startLogout())\n    }\n\n    const handleNewNote = () => {\n        dispatch(startNewNotes())\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n\n                <button \n                className=\"btn\"\n                onClick={handleLogout}\n                >\n                    Salir\n                </button>\n            </div>\n\n            <div\n             className=\"journal__new-entry\"\n             onClick={handleNewNote}\n             >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    Nueva nota\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addNewNote, saveNote, uploadFile } from '../../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes)\n\n    const handleSave = () => {\n        dispatch(saveNote(active))\n        dispatch(addNewNote(active))\n\n    }\n\n    const handleFileChange = ({target}) => {\n        const file = target.files[0];\n\n        file && dispatch(uploadFile(file))\n    }\n\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>9 de febrero 2022</span>\n\n                <input\n                    type=\"file\"\n                    hidden\n                    onChange={handleFileChange}\n                    id=\"fileSelector\"\n                    name=\"file\"\n                />\n            <div>\n                <label\n                    className='btn'\n                    htmlFor='fileSelector'\n                >\n                    Subir imagen\n                </label>\n                <button\n                    className=\"btn\"\n                    onClick={handleSave}\n                >\n                    Guardar\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleteNote } from '../../actions/notes'\nimport { useForm } from '../../hooks/useForm'\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch()\n\n    const { active: note } = useSelector(state => state.notes)\n    //console.log(note);\n\n    const activeId = useRef(note.id);\n    //console.log(activeId);\n\n\n    const [formValues, handleInputChange, reset] = useForm(note);\n\n    const { title, body } = formValues;\n\n\n    useEffect(() => {\n\n        if (note.id !== activeId.current) {\n            reset(note)\n            activeId.current = note.id\n        }\n\n    }, [note, reset]);\n\n    useEffect(() => {\n\n        dispatch(activeNote(note.id, { ...formValues }))\n\n    }, [formValues, dispatch, note.id]);\n\n    const handleDelete = () => {\n        dispatch(startDeleteNote(note.id))\n    }\n\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input\n                    type=\"text\"\n                    name='title'\n                    placeholder=\"Escribe el título\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    name='body'\n                    placeholder=\"¿Qué pasó hoy?\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {\n                    note.url &&\n                    <div className=\"notes__image\">\n                        <img\n                            src={note.url}\n                            alt={note.id}\n                        />\n                    </div>\n\n                }\n\n                <button\n                    className=\"btn buttons__btn-danger mt-5 pointer\"\n                    onClick={handleDelete}\n                >\n                    Delete\n\n                </button>\n\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Selecciona algo\n                <br />\n                para crear una nota!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-content\">\n\n            <Sidebar />\n\n\n            <main>\n                {\n                    active\n                    ?\n                    <NoteScreen />\n                    :\n                    <NothingSelected />\n\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter,\n    Navigate,\n    Route,\n    Routes,\n  } from 'react-router-dom';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { loadNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        onAuthStateChanged(getAuth(), user => {\n            //console.log(user);\n            if(user?.uid){\n                dispatch(login(user.uid, user.displayName))\n                setIsLoggedIn(true);\n\n                dispatch(loadNotes())\n\n            }else{\n                setIsLoggedIn(false)\n            }\n            setChecking(false)\n        })\n       \n    }, [dispatch]);\n\n\n    if(checking){\n        return (\n            <div className=\"auth__main\">\n                <div className=\"sk-fading-circle\">\n                    <div className=\"sk-circle1 sk-circle\"></div>\n                    <div className=\"sk-circle2 sk-circle\"></div>\n                    <div className=\"sk-circle3 sk-circle\"></div>\n                    <div className=\"sk-circle4 sk-circle\"></div>\n                    <div className=\"sk-circle5 sk-circle\"></div>\n                    <div className=\"sk-circle6 sk-circle\"></div>\n                    <div className=\"sk-circle7 sk-circle\"></div>\n                    <div className=\"sk-circle8 sk-circle\"></div>\n                    <div className=\"sk-circle9 sk-circle\"></div>\n                    <div className=\"sk-circle10 sk-circle\"></div>\n                    <div className=\"sk-circle11 sk-circle\"></div>\n                    <div className=\"sk-circle12 sk-circle\"></div>\n                </div>\n            </div>\n        )\n    }\n\n\n    return (\n        <BrowserRouter>\n            <div>\n                <Routes>\n                    <Route \n                        path=\"/jounalApp/auth/*\"\n                        element={ \n                        !isLoggedIn \n                        ?\n                        <AuthRouter/> \n                        :\n                        <JournalScreen/>\n                    }\n                    />\n\n                    <Route \n                        path=\"/journalApp/\"\n                        element={ \n                        isLoggedIn\n                        ?\n                        <JournalScreen/>\n                        :\n                        <div className='auth__main'>\n                            <div className=\"auth__box-container\">\n                                <LoginScreen/>\n                            </div>\n\n                        </div>\n                    }\n                    />\n                     <Route path=\"/\" element={<Navigate to=\"/journalApp/\" />} />\n\n\n                </Routes>\n            </div>\n        </BrowserRouter>\n    )\n}\n","import { types } from \"../types\";\nconst initialState = { \n    notes: [], \n    active: null\n }\nexport const notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.noteAddNew:\n            return {\n                ...state,\n                notes : [...state.notes, action.payload]\n            };\n        case types.noteActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        case types.notesLoad:\n            return {\n                ...state,\n                notes : [...action.payload]\n            }\n        case types.noteUpdate :\n            return {\n                ...state,\n                notes : state.notes.map( \n                    note => note.id === action.payload.id \n                    ? action.payload.note \n                    : note)\n            }\n        case types.noteDelete :\n            return {\n                ...state,\n                active : null,\n                notes : state.notes.filter(\n                    note => note.id !== action.payload\n                )\n            }\n        default: return state;\n    }\n} ","import { types } from \"../types\";\n\nconst initialState = {\n    loading : false,\n    msgError : null\n}\n\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.uiSetError:\n            \n            return {\n                ...state,\n                msgError : action.payload\n            }\n\n        case types.uiRemoveError :\n\n            return {\n                ...state,\n                msgError : null\n            }\n        \n        case types.uiStartLoading :\n\n            return {\n                ...state,\n                loading : true\n            }\n        case types.uiFinishLoading : \n            \n            return {\n                ...state,\n                loading : false\n            }\n\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; //para poder utilizar varios middlewares en el store\n\nconst reducers = combineReducers({\n    auth : authReducer,\n    ui : uiReducer,\n    notes : notesReducer\n})\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import { types } from '../types';\n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case types.login:\n\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            };\n        case types.logout:\n            return {};\n\n        default:\n            return state;\n    }\n\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store';\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}